plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.9.2'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.moowork.node' version '1.3.1'
    id 'java'
}

group = 'com.olbimacoojam'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

ext['spring-restdocs.version'] = '2.0.3.RELEASE'

dependencies {
    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${project.ext['spring-restdocs.version']}"
    testImplementation "org.springframework.restdocs:spring-restdocs-webtestclient:${project.ext['spring-restdocs.version']}"

    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.projectreactor:reactor-spring:1.0.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    implementation 'org.webjars:stomp-websocket:2.3.3'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.modelmapper:modelmapper:0.7.8'
    implementation 'com.google.code.gson:gson:2.7'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

jar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

apply plugin: 'com.moowork.node'

node {
    version = '12.13.1'
    npmVersion = '6.12.1'
    workDir = file("./src/frontend")
    npmWorkDir = file("./src/frontend")
    nodeModulesDir = file("./src/frontend")
}

task setUp(type: NpmTask) {
    description = "Install Node.js packages"
    args = ['install']
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

task url(type: NpmTask, dependsOn: setUp) {
    description = "Install url-search-params-polyfill packages"
    args = ['install', 'url-search-params-polyfill', '--save']
    outputs.files file('node_modules')
}

task axios(type: NpmTask, dependsOn: url) {
    description = "Install Axios packages"
    args = ['install', 'axios', '--save']
    outputs.files file('node_modules')
}

task buildFrontEnd(type: NpmTask, dependsOn: axios) {
    description = "Build vue.js"
    args = ['run', 'build']
}

processResources.dependsOn 'buildFrontEnd'