buildscript {
	ext {
		springBootVersion = '2.2.1.RELEASE'
		dependencyManagementPluginVersion = '1.0.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}}"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	group = 'com.olbimacoojam'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '1.8'
	configurations {
		developmentOnly
		runtimeClasspath {
			extendsFrom developmentOnly
		}
		compileOnly {
			extendsFrom annotationProcessor
		}
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
		testImplementation 'org.junit.jupiter:junit-jupiter-api'
		testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		compileOnly 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		runtimeOnly 'com.h2database:h2'
		runtimeOnly 'mysql:mysql-connector-java'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		testImplementation 'org.springframework.security:spring-security-test'
	}
	test {
		useJUnitPlatform()
	}
}

project(':baseball') {
	dependencies {
		compile project(':common')
	}
}